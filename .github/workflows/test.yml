name: test

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.*'
      - 'docs/*'
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - 'README.*'
      - 'docs/*'

env:
  javafx-version: '14.0.1'

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - runs-on: windows-latest
            os: windows
          # - runs-on: macOS-latest
          #   os: osx
          - runs-on: ubuntu-latest
            os: linux
    steps:
      - uses: actions/checkout@v2

      - name: Install lein (unix)
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.10.1.469'
          lein: 2.9.4
          boot: latest
        if: matrix.os != 'windows'

      - name: Install lein (windows)
        run: |
          from urllib import request
          import os
          lists = [
            ("https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/%s", "lein.bat"),
          ]
          for elem in lists:
            url = elem[0] % elem[1]
            file = elem[1]
            request.urlretrieve(url, file)
        shell: python
        if: matrix.os == 'windows'
      - name: Set PATH (windows)
        run: |
          mkdir -p $HOME/bin
          mv lein.bat ~/bin/
          echo "PATH=$PATH:$HOME/bin" >> $GITHUB_ENV
        if: matrix.os == 'windows'

      - name: Install openjfx jmods
        run: |
          mkdir -p jmods
          curl -o jmods/jmods.zip -sSL https://download2.gluonhq.com/openjfx/${{ env.javafx-version }}/openjfx-${{ env.javafx-version }}_${{ matrix.os }}-x64_bin-jmods.zip
          (
            cd jmods
            unzip jmods.zip
          )

      - name: Initialize custom JRE
        run: lein jlink init

      # Lint
      - run: lein cljfmt check
        if: matrix.runs-on == 'ubuntu-latest'
      - run: lein eastwood
        if: matrix.runs-on == 'ubuntu-latest'
      - run: lein kibit
        if: matrix.runs-on == 'ubuntu-latest'

      - name: Test
        run: lein test
      - name: Build
        run: lein jlink assemble

      - name: Coverage
        run: lein cloverage --codecov
      - uses: codecov/codecov-action@v1
        if: matrix.runs-on == 'ubuntu-latest'
